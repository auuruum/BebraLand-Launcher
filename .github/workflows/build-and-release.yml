name: Build and Release

on:
  push:
    branches: [ main, master ]  # Trigger on any push to main or master branch
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    runs-on: windows-latest  # Using Windows runner for .NET build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'  # Using .NET 8.0 as seen in your config
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build Windows x64
      run: dotnet publish -c Release -r win-x64 --self-contained true /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true /p:EnableCompressionInSingleFile=true
      
    - name: Build Linux x64
      run: dotnet publish -c Release -r linux-x64 --self-contained true /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true /p:EnableCompressionInSingleFile=true
      
    - name: Zip Windows build
      run: |
        # Adjust path as needed according to your project structure
        $projectPath = "src/GmiLauncher"
        if (!(Test-Path $projectPath)) {
          $projectPath = "GmiLauncher" 
          if (!(Test-Path $projectPath)) {
            $projectPath = "."
          }
        }
        
        $publishPath = "$projectPath/bin/Release/net8.0/win-x64/publish"
        Compress-Archive -Path "$publishPath/*" -DestinationPath GmiLauncher-win-x64.zip
      shell: pwsh
      
    - name: Zip Linux build
      run: |
        # Adjust path as needed according to your project structure
        $projectPath = "src/GmiLauncher"
        if (!(Test-Path $projectPath)) {
          $projectPath = "GmiLauncher" 
          if (!(Test-Path $projectPath)) {
            $projectPath = "."
          }
        }
        
        $publishPath = "$projectPath/bin/Release/net8.0/linux-x64/publish"
        Compress-Archive -Path "$publishPath/*" -DestinationPath GmiLauncher-linux-x64.zip
      shell: pwsh
      
    - name: Generate release tag
      id: tag
      run: |
        echo "::set-output name=release_tag::build_$(date +'%Y.%m.%d_%H.%M.%S')"
      shell: bash
        
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        name: Automatic build ${{ steps.tag.outputs.release_tag }}
        files: |
          GmiLauncher-win-x64.zip
          GmiLauncher-linux-x64.zip
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
